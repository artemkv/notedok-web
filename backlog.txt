! Show first 5 notes

As a regular user, I want to see my first 5 notes when I load page initially

* Load list of files from the storage (async)
* Render first 5 notes (or as many as could find)
	* Only text files should be shown (filter based on file extension ".txt")
	* File name becomes a title (file extension ".txt" is omitted)
	* File content becomes a text
	* Title should be rendered as safe content
	* Text should be rendered as safe content
	* Note loading and rendering should be done asynchronously, since it might take time to retrieve the note content
	* Title is always displayed as a single line
	* Long title should be rendered with "..." at the end, replacing the hidden part
	* Long text should be all visible, the note height is variable and adjusts to fit all text


! Progress indicator

As a regular user, I want to have an understanding that the page is alive and doing something

* Render the progress indicator while file list is being retrieved


! Load next 5 notes

As a regular user, I want to see next 5 notes if the note I am interested in is not yet shown on the page

* When clicked on "More" button load next 5 notes (or as many as could find)
* Loading and rendering should be done the same as for the first 5 notes


! Number of notes yet to load

As a regular user, I feel frustrated when I only see first 5 notes and have no idea how many there are more.

* Indicate number of notes matching the current search filter and not yet loaded on the "More" button: "More (N not loaded)"


! Edit a note

As a regular user, I want to edit note title and text

* Title is rendered as a textbox without border, so it is immediately editable
* Title max length is limited to 50 chars
* Text becomes a textarea when clicked (click resulting in a text selection is ignored)
* Title/text textboxes have the same visual style
* When empty, title should be rendered as a watermark "No title"
* When empty, text should be rendered as a watermark "Type your text here"
* After changes are collected to be saved, the text textarea becomes a div again


! Save the changes

As a regular user, I want to make sure the changes I did are saved

* TODO: When title/text textbox loses focus, changes are saved to the S3
* Changes should be saved asynchronously
* If title left empty, generate the file name
* When title is updated (manually or when auto-generated), the file should be renamed
* TODO: Title can be invalid file name. The app should make a best effort to replace the invalid characters as follows:
/ becomes (sl)
? becomes (qst)
< becomes (lt)
> becomes (gt)
\ becomes (bsl)
: becomes (col)
* becomes (star)
| becomes (pipe)
" becomes (dqt)
^ becomes (crt)
* TODO: check more S3-specific limitations


!  Template note

As a regular user, when I want to add a new note, I want to be able to type right into the empty pre-created template note.

* Render template note as a first note displayed
* Title should be rendered as a watermark "New note"
* Auto-generated file names should be rendered as empty


! Create a note

As a regular user, when I want to add a new note, I want to be able to type right into the empty pre-created note.
Once the changes are saved, the new empty note should appear allowing me to continue with the next note.

* Editing the template note creates a new template note (content have to change)
* Editing the template note turns it to a regular note, so saving changes should work exactly as with the regular note
* If, after the template note turns it to a regular note, the title is still empty, the title watermark should change to "No title"
* If after editing title/text stays empty, keep template note and don't create a new note





TODO:
- tab does not stop on control area buttons
- encoding of filenames for url
- utf-8


Test:
- notes loaded in a random order are rendered in the order the are returned
- start loading second page before the first page notes have finished loading



Rules for overwriting on save:

Existing note

V text updated -> always overwrite (PUT file)
title updated -> 
	- V new title is empty, generate unique path (and that is where the old condition checking title was useful), then
	- V try to rename
	- V if conflicts, make unique and rename again (POST rename)
	- inform UI

New note

V text updated -> generate unique path, overwrite (PUT file)
title updated -> 
	- V try to save, not overwrite (POST files)
	- V if conflicts, make unique and save with overwrite (PUT file)
	- inform UI



/*
export interface NoteLoaded {
  type: NoteType.Loaded;
  id: string;
  path: string; // can be empty if the note was created on UI and haven't been yet saved
  title: string;
  text: string;
  isDeleted: boolean; // TODO: begins to clash with path
}
*/